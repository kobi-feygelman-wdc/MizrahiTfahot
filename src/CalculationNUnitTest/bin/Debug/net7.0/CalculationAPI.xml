<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CalculationAPI</name>
    </assembly>
    <members>
        <member name="T:CalculationAPI.Attributes.ValidateModelStateAttribute">
            <summary>
            Model state validation attribute
            </summary>
        </member>
        <member name="M:CalculationAPI.Attributes.ValidateModelStateAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Called before the action method is invoked
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:CalculationAPI.Controllers.AuthController.Register(CalculationAPI.Authentication.UserDto)">
            <summary>
            Handles register user request
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CalculationAPI.Controllers.AuthController.Login(CalculationAPI.Authentication.UserDto)">
            <summary>
            Handles login user request
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:CalculationAPI.Controllers.CalcController">
            <summary>
            
            </summary>
        </member>
        <member name="M:CalculationAPI.Controllers.CalcController.CalculatePost(CalculationAPI.Models.CalculateBody)">
            <summary>
            Perform arithmetic operation
            </summary>
            <param name="body"></param>
            <response code="200">Successful operation</response>
        </member>
        <member name="T:CalculationAPI.Filters.BasePathFilter">
            <summary>
            BasePath Document Filter sets BasePath property of Swagger and removes it from the individual URL paths
            </summary>
        </member>
        <member name="M:CalculationAPI.Filters.BasePathFilter.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="basePath">BasePath to remove from Operations</param>
        </member>
        <member name="P:CalculationAPI.Filters.BasePathFilter.BasePath">
            <summary>
            Gets the BasePath of the Swagger Doc
            </summary>
            <returns>The BasePath of the Swagger Doc</returns>
        </member>
        <member name="M:CalculationAPI.Filters.BasePathFilter.Apply(Microsoft.OpenApi.Models.OpenApiDocument,Swashbuckle.AspNetCore.SwaggerGen.DocumentFilterContext)">
            <summary>
            Apply the filter
            </summary>
            <param name="swaggerDoc">OpenApiDocument</param>
            <param name="context">FilterContext</param>
        </member>
        <member name="T:CalculationAPI.Filters.GeneratePathParamsValidationFilter">
            <summary>
            Path Parameter Validation Rules Filter
            </summary>
        </member>
        <member name="M:CalculationAPI.Filters.GeneratePathParamsValidationFilter.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            Constructor
            </summary>
            <param name="operation">Operation</param>
            <param name="context">OperationFilterContext</param>
        </member>
        <member name="T:CalculationAPI.Models.CalculateBody">
            <summary>
            
            </summary>
        </member>
        <member name="P:CalculationAPI.Models.CalculateBody.Operand1">
            <summary>
            Gets or Sets Operand1
            </summary>
        </member>
        <member name="P:CalculationAPI.Models.CalculateBody.Operand2">
            <summary>
            Gets or Sets Operand2
            </summary>
        </member>
        <member name="T:CalculationAPI.Models.CalculateBody.OperationEnum">
            <summary>
            Gets or Sets Operation
            </summary>
        </member>
        <member name="F:CalculationAPI.Models.CalculateBody.OperationEnum.AddEnum">
            <summary>
            Enum AddEnum for add
            </summary>
        </member>
        <member name="F:CalculationAPI.Models.CalculateBody.OperationEnum.SubtractEnum">
            <summary>
            Enum SubtractEnum for subtract
            </summary>
        </member>
        <member name="F:CalculationAPI.Models.CalculateBody.OperationEnum.MultiplyEnum">
            <summary>
            Enum MultiplyEnum for multiply
            </summary>
        </member>
        <member name="F:CalculationAPI.Models.CalculateBody.OperationEnum.DivideEnum">
            <summary>
            Enum DivideEnum for divide
            </summary>
        </member>
        <member name="P:CalculationAPI.Models.CalculateBody.Operation">
            <summary>
            Gets or Sets Operation
            </summary>
        </member>
        <member name="M:CalculationAPI.Models.CalculateBody.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:CalculationAPI.Models.CalculateBody.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:CalculationAPI.Models.CalculateBody.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:CalculationAPI.Models.CalculateBody.Equals(CalculationAPI.Models.CalculateBody)">
            <summary>
            Returns true if CalculateBody instances are equal
            </summary>
            <param name="other">Instance of CalculateBody to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:CalculationAPI.Models.CalculateBody.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:CalculationAPI.Models.CalculateBody.AddDecimals(System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            Adds 2 decimals
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
            <exception cref="T:CalculationAPI.Models.CalcException"></exception>
        </member>
        <member name="M:CalculationAPI.Models.CalculateBody.SubDecimals(System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            Subtracts 2 decimals
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
            <exception cref="T:CalculationAPI.Models.CalcException"></exception>
        </member>
        <member name="M:CalculationAPI.Models.CalculateBody.MultDecimals(System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            Multiplies 2 decimals
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
            <exception cref="T:CalculationAPI.Models.CalcException"></exception>
        </member>
        <member name="M:CalculationAPI.Models.CalculateBody.DivDecimals(System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            Divides 2 operands 
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
            <exception cref="T:CalculationAPI.Models.CalcException"></exception>
        </member>
        <member name="M:CalculationAPI.Models.CalculateBody.Calculate">
            <summary>
            Calculates the operation result with Operand1 and Operand2
            </summary>
            <returns></returns>
            <exception cref="T:CalculationAPI.Models.CalcException"></exception>
        </member>
        <member name="T:CalculationAPI.Models.InlineResponse200">
            <summary>
            
            </summary>
        </member>
        <member name="P:CalculationAPI.Models.InlineResponse200.Result">
            <summary>
            Gets or Sets Result
            </summary>
        </member>
        <member name="M:CalculationAPI.Models.InlineResponse200.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:CalculationAPI.Models.InlineResponse200.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:CalculationAPI.Models.InlineResponse200.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:CalculationAPI.Models.InlineResponse200.Equals(CalculationAPI.Models.InlineResponse200)">
            <summary>
            Returns true if InlineResponse200 instances are equal
            </summary>
            <param name="other">Instance of InlineResponse200 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:CalculationAPI.Models.InlineResponse200.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:CalculationAPI.Program">
            <summary>
            Program
            </summary>
        </member>
        <member name="M:CalculationAPI.Program.Main(System.String[])">
            <summary>
            Main
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:CalculationAPI.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            Create the web host builder.
            </summary>
            <param name="args"></param>
            <returns>IWebHostBuilder</returns>
        </member>
        <member name="M:CalculationAPI.Services.AuthService.Register(CalculationAPI.Authentication.UserDto)">
            <summary>
             Registers a new user in the system
            </summary>
            <param name="request"></param>
            <returns>user object</returns>
        </member>
        <member name="M:CalculationAPI.Services.AuthService.CreatePasswordHash(System.String,System.Byte[]@,System.Byte[]@)">
            <summary>
            Generates password hash and password salt from a given password
            </summary>
            <param name="password"></param>
            <param name="passwordHash"></param>
            <param name="passwordSalt"></param>
        </member>
        <member name="M:CalculationAPI.Services.AuthService.VerifyPasswordHash(System.String,System.Byte[],System.Byte[])">
            <summary>
            Verifies the password 
            </summary>
            <param name="password"></param>
            <param name="passwordHash"></param>
            <param name="passwordSalt"></param>
            <returns>True if succeeds or false otherwise</returns>
        </member>
        <member name="M:CalculationAPI.Services.AuthService.CreateToken(CalculationAPI.Authentication.User)">
            <summary>
            Generates the token from secret key, issuer, audience and expiration date using HmacSha512 algorithm
            </summary>
            <param name="user"></param>
            <returns>token</returns>
        </member>
        <member name="M:CalculationAPI.Services.AuthService.ValidateToken(System.Byte[],System.String,System.String,System.String)">
            <summary>
            Validates the token after creation
            </summary>
            <param name="secretKey"></param>
            <param name="jwt"></param>
            <param name="issuer"></param>
            <param name="audience"></param>
            <returns>True if succeeds or false otherwise</returns>
        </member>
        <member name="M:CalculationAPI.Services.AuthService.Login(CalculationAPI.Authentication.UserDto)">
            <summary>
            Logins the user and returns the token upon completion
            </summary>
            <param name="request"></param>
            <returns>token</returns>
        </member>
        <member name="M:CalculationAPI.Services.IAuthService.Register(CalculationAPI.Authentication.UserDto)">
            <summary>
             Registers a new user in the system
            </summary>
            <param name="request"></param>
            <returns>user object</returns>
        </member>
        <member name="M:CalculationAPI.Services.IAuthService.Login(CalculationAPI.Authentication.UserDto)">
            <summary>
            Logins the user and returns the token upon completion
            </summary>
            <param name="request"></param>
            <returns>token</returns>
        </member>
        <member name="T:CalculationAPI.Startup">
            <summary>
            Startup
            </summary>
        </member>
        <member name="M:CalculationAPI.Startup.#ctor(Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
            <param name="env"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:CalculationAPI.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:CalculationAPI.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="loggerFactory"></param>
        </member>
    </members>
</doc>
